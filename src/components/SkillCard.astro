---
// src/components/SkillCard.astro
import type { Skill } from '../types';

export interface Props {
  skill: Skill;
}

const { skill } = Astro.props;
const proficiency = skill.metadata?.proficiency?.value || 'Intermediate';
const years = skill.metadata?.years_experience || 0;

// Get proficiency color
const getProficiencyColor = (level: string) => {
  switch (level.toLowerCase()) {
    case 'expert':
      return 'bg-green-100 text-green-800';
    case 'advanced':
      return 'bg-blue-100 text-blue-800';
    case 'intermediate':
      return 'bg-yellow-100 text-yellow-800';
    case 'beginner':
      return 'bg-gray-100 text-gray-800';
    default:
      return 'bg-gray-100 text-gray-800';
  }
};

const proficiencyColor = getProficiencyColor(proficiency);
---

<div class="bg-white rounded-lg p-4 shadow-md hover:shadow-lg transition-all duration-300 hover:-translate-y-1">
  <div class="flex items-start justify-between mb-2">
    <h3 class="font-semibold text-gray-900 text-lg">
      {skill.metadata?.name || skill.title}
    </h3>
    <span class={`text-xs font-medium px-2.5 py-1 rounded-full ${proficiencyColor}`}>
      {proficiency}
    </span>
  </div>
  
  {years > 0 && (
    <div class="flex items-center text-sm text-gray-600 mt-2">
      <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      {years} year{years !== 1 ? 's' : ''} experience
    </div>
  )}
</div>